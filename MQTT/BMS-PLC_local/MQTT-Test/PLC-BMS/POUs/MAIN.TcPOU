<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="MAIN" Id="{d4ebaf24-7101-4aae-9e25-9030344376cd}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	fbMqttClient :  FB_IotMqttClient;
	bSetParameter: BOOL := TRUE;
	bConnect: BOOL := FALSE;
	fbMessageQueue : FB_IotMqttMessageQueue;
	fbMessage      : FB_IotMqttMessage;
	
	sTopicPub   : STRING(255) := 'MyTopic';
    sPayloadPub : STRING(255);
    i : UDINT;
    fbTimer : TON := (PT:=T#1S);
	
	bSubscribed    : BOOL;
    sTopicSub      : STRING(255) := 'MyTopic';
    
	sTopicRcv      : STRING(255);
    sPayloadRcv    : STRING(255);	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ // set parameters once when connecting to the mqtt broker
IF bSetParameter THEN
    bSetParameter               := FALSE;
    fbMqttClient.sHostName      := 'broker.hivemq.com';
    fbMqttClient.nHostPort      := 1883;
    fbMqttClient.sTopicPrefix   := ''; 
    fbMqttClient.sUserName      := 'User';
    fbMqttClient.sUserPassword  := 'TopSecret'; 
    fbMqttClient.ipMessageQueue := fbMessageQueue;
END_IF

// MQTT client must be triggered cyclically
fbMqttClient.Execute(bConnect);

IF fbMqttClient.bConnected THEN
    IF NOT bSubscribed THEN
        bSubscribed := fbMqttClient.Subscribe(sTopic:=sTopicSub, eQoS:=TcIotMqttQos.AtMostOnceDelivery);
    END_IF
    fbTimer(IN:=TRUE);
    IF fbTimer.Q THEN // publish new payload every second
        fbTimer(IN:=FALSE);
        i := i + 1;
        sPayloadPub := CONCAT('MyMessage', TO_STRING(i));
        fbMqttClient.Publish(    sTopic:= sTopicPub, 
                               pPayload:= ADR(sPayloadPub), nPayloadSize:= LEN2(ADR(sPayloadPub))+1,  
                                eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );
    END_IF
	
	IF fbMessageQueue.nQueuedMessages > 0 THEN
    IF fbMessageQueue.Dequeue(fbMessage:=fbMessage) THEN
        fbMessage.GetTopic(pTopic:=ADR(sTopicRcv), nTopicSize:=SIZEOF(sTopicRcv) );
        fbMessage.GetPayload(pPayload:=ADR(sPayloadRcv), nPayloadSize:=SIZEOF(sPayloadRcv), bSetNullTermination:=FALSE);
    END_IF
END_IF
END_IF]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="11" Count="11" />
      <LineId Id="2" Count="0" />
      <LineId Id="46" Count="13" />
      <LineId Id="62" Count="0" />
      <LineId Id="64" Count="4" />
      <LineId Id="63" Count="0" />
      <LineId Id="45" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>